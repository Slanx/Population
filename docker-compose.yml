version: '3.8'
services:
  client:
    container_name: population-client
    image: population-client
    build:
      context: client
      dockerfile: Dockerfile
      target: ${NODE_ENV}
    depends_on:
      - server
    networks:
      - client-server
    ports:
      - ${CLIENT_PORT}:3000
    volumes:
      - ./client/src:/usr/app/client/src
  server:
    container_name: population-server
    image: population-server
    build:
      context: server
      dockerfile: Dockerfile
      target: ${NODE_ENV}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    networks:
      - server-db
      - client-server
    depends_on:
      - mongodb
    env_file:
      - ./server/.env
    volumes:
      - ./server/src:/usr/app/server/src
    restart: always
  mongodb:
    image: mongo
    restart: always
    networks:
      - server-db
    env_file:
      - ./docker/mongo/.env
    volumes:
      - db_data:/data/db
      - ./docker/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - db_config:/data/configdb
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongodb
    networks:
      - server-db
    env_file:
      - ./docker/mongo-express/.env
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}

networks:
  client-server:
    driver: bridge
  server-db:
    driver: bridge
volumes:
  db_data:
    driver: local
  db_config:
    driver: local
